def scriptDir = "/src/tests"
def scriptNames = []

def script = null
def inputThreads = null
def inputUrl = null
def inputPort = null

pipeline {
    agent {
      node {label 'indystress'}
    }
    stages {
        stage('Test Suites'){
            steps {
                script {
                    def jmeterScripts = findFiles(glob: "${scriptDir}/*.jmx")
                    jmeterScripts.each{
                        suiteNames << it.name
                    }
                    echo "Scripts : ${scriptNames}"
                }
            }
        }
        stage('Enter Parameters'){
            steps {
                script {
                    params = input(
                        id: 'userInput', message: "Please enter a test suite to run:",
                        parameters:[
                            choice(name: 'SCRIPT', choices: suiteNames, description: "Test suite"),
                            string(name: 'threads', defaultValue: '5', description: 'Jmeter treads'),
                            string(name: 'url', defaultValue: 'None', description: 'Indy URL to test'),
                            string(name: 'port', defaultValue: '80', description: 'Indy port to test')
                        ]
                    )
                    script = params['SCRIPT']
                    inputThreads = userInput.threads?:'5'
                    inputUrl = userInput.url?:''
                    inputPort = userInput.port?:'80'
                }
            }
        }
        stage('Run Test'){
            steps {
                script {
                    echo "Jmeter running ${script}"
                    sh script: "/src/entrypoint.sh ${script} ${inputThreads} ${inputUrl} ${inputPort}"
                }
            }
        }
    }
}